name: Data Pipeline Processing

on:
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force data update even if no changes detected'
        required: false
        default: 'false'

jobs:
  process-zlecaf-data:
    name: Process ZLECAf Data Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas openpyxl requests beautifulsoup4
      
      - name: Check for data updates
        id: check_updates
        run: |
          echo "Checking for data updates..."
          echo "data_changed=false" >> $GITHUB_OUTPUT
      
      - name: Apply tariff corrections
        if: steps.check_updates.outputs.data_changed == 'true' || github.event.inputs.force_update == 'true'
        run: |
          python apply_corrections.py
      
      - name: Integrate validated data
        if: steps.check_updates.outputs.data_changed == 'true' || github.event.inputs.force_update == 'true'
        run: |
          python integrate_validated_data.py
      
      - name: Verify data quality
        run: |
          python verify_data_quality.py
      
      - name: Generate data report
        run: |
          echo "# ZLECAf Data Pipeline Report" > data_report.md
          echo "**Date**: $(date -u)" >> data_report.md
          echo "" >> data_report.md
          echo "## Data Files Processed" >> data_report.md
          ls -lh *.csv *.xlsx | awk '{print "- " $9 " (" $5 ")"}' >> data_report.md
      
      - name: Upload data report
        uses: actions/upload-artifact@v4
        with:
          name: data-pipeline-report
          path: data_report.md
          retention-days: 30
  
  validate-tariff-data:
    name: Validate Tariff Schedules
    runs-on: ubuntu-latest
    needs: process-zlecaf-data
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas openpyxl json5
      
      - name: Validate tariff corrections
        run: |
          python -c "
          import json
          import sys
          
          with open('zlecaf_corrections_2024.json', 'r') as f:
              data = json.load(f)
          
          assert 'tariff_corrections' in data, 'Missing tariff_corrections'
          assert 'enhanced_statistics' in data, 'Missing enhanced_statistics'
          
          print('âœ… Tariff data validation passed')
          "
      
      - name: Generate validation report
        run: |
          python detailed_verification.py > validation_report.txt
      
      - name: Upload validation report
        uses: actions/upload-artifact@v4
        with:
          name: tariff-validation-report
          path: validation_report.txt
          retention-days: 30
