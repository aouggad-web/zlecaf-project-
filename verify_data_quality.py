#!/usr/bin/env python3
"""
Script de v√©rification de la qualit√© des donn√©es ZLECAf
"""
import pandas as pd
import numpy as np

def verify_data_quality():
    # Lire les donn√©es
    df = pd.read_csv('/app/ZLECAF_54_PAYS_DONNEES_COMPLETES.csv')
    
    print("="*80)
    print("üîç ANALYSE DE QUALIT√â DES DONN√âES ZLECAF")
    print("="*80)
    
    # 1. V√©rification coh√©rence PIB/Population/PIB par habitant
    print("\n1Ô∏è‚É£ V√âRIFICATION COH√âRENCE PIB/POPULATION/PIB_PAR_HABITANT")
    print("-" * 60)
    
    df['PIB_calc'] = (df['PIB_2024_Mds_USD'] * 1000) / df['Population_2024_M']  # Conversion en USD par habitant
    df['ecart_pib'] = abs(df['PIB_calc'] - df['PIB_par_habitant_USD'])
    df['ecart_pct'] = (df['ecart_pib'] / df['PIB_par_habitant_USD']) * 100
    
    # Pays avec √©carts significatifs (>10%)
    incoh√©rences_pib = df[df['ecart_pct'] > 10][['Pays', 'PIB_2024_Mds_USD', 'Population_2024_M', 'PIB_par_habitant_USD', 'PIB_calc', 'ecart_pct']]
    
    if not incoh√©rences_pib.empty:
        print("‚ùå INCOH√âRENCES D√âTECT√âES (√©cart > 10%):")
        for _, row in incoh√©rences_pib.iterrows():
            print(f"   ‚Ä¢ {row['Pays']}: PIB/hab donn√© = {row['PIB_par_habitant_USD']:,.0f} USD, calcul√© = {row['PIB_calc']:,.0f} USD (√©cart: {row['ecart_pct']:.1f}%)")
    else:
        print("‚úÖ Coh√©rence PIB/Population/PIB par habitant : OK")
    
    # 2. V√©rification secteurs √©conomiques (somme = 100%)
    print("\n2Ô∏è‚É£ V√âRIFICATION SECTEURS √âCONOMIQUES (somme doit = 100%)")
    print("-" * 60)
    
    df['somme_secteurs'] = df['Part_Secteur_1_Pct'] + df['Part_Secteur_2_Pct'] + df['Part_Secteur_3_Pct']
    secteurs_incorrects = df[abs(df['somme_secteurs'] - 100) > 1][['Pays', 'Part_Secteur_1_Pct', 'Part_Secteur_2_Pct', 'Part_Secteur_3_Pct', 'somme_secteurs']]
    
    if not secteurs_incorrects.empty:
        print("‚ùå SECTEURS INCORRECTS (somme ‚â† 100%):")
        for _, row in secteurs_incorrects.iterrows():
            print(f"   ‚Ä¢ {row['Pays']}: {row['Part_Secteur_1_Pct']}% + {row['Part_Secteur_2_Pct']}% + {row['Part_Secteur_3_Pct']}% = {row['somme_secteurs']}%")
    else:
        print("‚úÖ Sommes secteurs √©conomiques : OK")
    
    # 3. V√©rification valeurs aberrantes
    print("\n3Ô∏è‚É£ D√âTECTION VALEURS ABERRANTES")
    print("-" * 60)
    
    # PIB par habitant extr√™mes
    pib_median = df['PIB_par_habitant_USD'].median()
    pib_extremes = df[(df['PIB_par_habitant_USD'] > pib_median * 10) | (df['PIB_par_habitant_USD'] < pib_median * 0.1)]
    
    if not pib_extremes.empty:
        print("‚ö†Ô∏è PIB/HABITANT EXTR√äMES:")
        for _, row in pib_extremes.iterrows():
            print(f"   ‚Ä¢ {row['Pays']}: {row['PIB_par_habitant_USD']:,.0f} USD/hab (m√©diane africaine: {pib_median:.0f})")
    
    # IDH hors limites (0-1)
    idh_incorrect = df[(df['IDH_2024'] < 0) | (df['IDH_2024'] > 1)]
    if not idh_incorrect.empty:
        print("‚ùå IDH HORS LIMITES (doit √™tre 0-1):")
        for _, row in idh_incorrect.iterrows():
            print(f"   ‚Ä¢ {row['Pays']}: IDH = {row['IDH_2024']}")
    
    # 4. Incoh√©rences g√©ographiques/√©conomiques
    print("\n4Ô∏è‚É£ V√âRIFICATIONS G√âOGRAPHIQUES ET √âCONOMIQUES")
    print("-" * 60)
    
    # Pays avec populations suspectes
    pop_suspectes = []
    pays_ref = {
        'Nigeria': 218, '√âthiopie': 125, '√âgypte': 110, 'RD Congo': 95, 'Tanzanie': 67,
        'Afrique du Sud': 59, 'Kenya': 55, 'Ouganda': 48, 'Alg√©rie': 47, 'Soudan': 46,
        'Angola': 38, 'Maroc': 37, 'Ghana': 33, 'Mozambique': 33, 'Madagascar': 30,
        'Cameroun': 29, 'C√¥te d\'Ivoire': 29, 'Niger': 26, 'Burkina Faso': 23, 'Mali': 22
    }
    
    for pays, pop_ref in pays_ref.items():
        pays_data = df[df['Pays'] == pays]
        if not pays_data.empty:
            pop_actuelle = pays_data.iloc[0]['Population_2024_M']
            ecart = abs(pop_actuelle - pop_ref) / pop_ref * 100
            if ecart > 20:  # Plus de 20% d'√©cart
                pop_suspectes.append(f"   ‚Ä¢ {pays}: {pop_actuelle:.1f}M (r√©f√©rence ~{pop_ref}M, √©cart: {ecart:.1f}%)")
    
    if pop_suspectes:
        print("‚ö†Ô∏è POPULATIONS SUSPECTES (√©cart >20% vs r√©f√©rences):")
        for p in pop_suspectes:
            print(p)
    
    # 5. Analyse des rangs IDH
    print("\n5Ô∏è‚É£ V√âRIFICATION RANGS IDH AFRIQUE")
    print("-" * 60)
    
    # V√©rifier coh√©rence IDH vs rang
    df_sorted = df.sort_values('IDH_2024', ascending=False)
    df_sorted['rang_calcule'] = range(1, len(df_sorted) + 1)
    
    rangs_incorrects = []
    for _, row in df_sorted.iterrows():
        if abs(row['Rang_Afrique_IDH'] - row['rang_calcule']) > 5:  # Tol√©rance de 5 rangs
            rangs_incorrects.append(f"   ‚Ä¢ {row['Pays']}: Rang donn√© = {row['Rang_Afrique_IDH']}, rang calcul√© = {row['rang_calcule']} (IDH: {row['IDH_2024']})")
    
    if rangs_incorrects:
        print("‚ö†Ô∏è RANGS IDH INCOH√âRENTS:")
        for r in rangs_incorrects[:10]:  # Afficher les 10 premiers
            print(r)
    
    # 6. R√©sum√© des pays √† priorit√© haute pour validation
    print("\n6Ô∏è‚É£ SYNTH√àSE - PAYS N√âCESSITANT VALIDATION URGENTE")
    print("-" * 60)
    
    pays_problemes = set()
    
    # Ajouter pays avec incoh√©rences PIB
    if not incoh√©rences_pib.empty:
        pays_problemes.update(incoh√©rences_pib['Pays'].tolist())
    
    # Ajouter pays avec secteurs incorrects
    if not secteurs_incorrects.empty:
        pays_problemes.update(secteurs_incorrects['Pays'].tolist())
    
    # Ajouter pays avec valeurs extr√™mes
    if not pib_extremes.empty:
        pays_problemes.update(pib_extremes['Pays'].tolist())
    
    # Pays √† compl√©ter
    pays_incomplete = df[df['Notes_Validation'] == '√Ä compl√©ter']['Pays'].tolist()
    
    print("üî¥ PRIORIT√â CRITIQUE (donn√©es incoh√©rentes):")
    for pays in sorted(pays_problemes):
        print(f"   ‚Ä¢ {pays}")
    
    print(f"\nüü° PRIORIT√â HAUTE (22 pays √† compl√©ter):")
    print(f"   {', '.join(pays_incomplete[:10])}...")
    
    # 7. Recommandations
    print("\n7Ô∏è‚É£ RECOMMANDATIONS DE VALIDATION")
    print("-" * 60)
    print("1. V√©rifiez en PRIORIT√â les pays avec incoh√©rences d√©tect√©es ci-dessus")
    print("2. Pour les pays '√Ä compl√©ter', utilisez les sources officielles:")
    print("   ‚Ä¢ PNUD (undp.org) pour IDH")
    print("   ‚Ä¢ Banque Mondiale (worldbank.org) pour PIB et population")
    print("   ‚Ä¢ Instituts nationaux de statistiques pour les secteurs")
    print("3. Validez la coh√©rence PIB = (PIB/hab √ó Population)")
    print("4. V√©rifiez que la somme des secteurs = 100%")
    print("5. Contr√¥lez les valeurs extr√™mes identifi√©es")
    
    print("\n‚úÖ ANALYSE TERMIN√âE")
    print("="*80)
    
    return df

if __name__ == "__main__":
    verify_data_quality()